name: Terraform checks

on:
  pull_request:
    branches:
      - dev
      - main

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}

jobs:
  terraform-checks:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && (github.base_ref == 'dev' || github.base_ref == 'main')
    permissions:
      pull-requests: write

    env:
      TF_VAR_db_username: ${{ github.base_ref == 'main' && secrets.DB_USERNAME_PROD || secrets.DB_USERNAME_DEV }}
      TF_VAR_db_password: ${{ github.base_ref == 'main' && secrets.DB_PASSWORD_PROD || secrets.DB_PASSWORD_DEV }}
      TF_VAR_db_name: ${{ github.base_ref == 'main' && secrets.DB_NAME_PROD || secrets.DB_NAME_DEV }}
      TF_VAR_allocated_storage: ${{ github.base_ref == 'main' && vars.ALLOCATED_STORAGE_PROD || vars.ALLOCATED_STORAGE_DEV }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Cache Terraform
        uses: actions/cache@v3
        with:
          path: |
            .terraform
            terraform.tfstate.d
          key: ${{ runner.os }}-terraform-${{ hashFiles('**/*.tf') }}
          restore-keys: |
            ${{ runner.os }}-terraform-

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.4.2

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Select Terraform Workspace
        run: terraform workspace select ${{ github.base_ref }} || terraform workspace new ${{ github.base_ref }}

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan