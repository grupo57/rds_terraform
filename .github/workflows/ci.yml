name: CI Terraform RDS

on:
  push:
    branches:
      - dev
      - main

jobs:
  terraform:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Run Terraform fmt -check
        run: terraform fmt -check

      - name: Terraform Init
        run: terraform init

      - name: Terraform Validate
        run: terraform validate

  apply_dev:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'push' && github.ref == 'refs/heads/dev'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Apply for Dev
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -var="environment=dev" -var="db_username=${{ secrets.DB_USERNAME_DEV }}" -var="db_password=${{ secrets.DB_PASSWORD_DEV }}" -auto-approve

  apply_prod:
    runs-on: ubuntu-latest
    needs: terraform
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Terraform Apply for Prod
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          terraform apply -var="environment=prod" -var="db_username=${{ secrets.DB_USERNAME_PROD }}" -var="db_password=${{ secrets.DB_PASSWORD_PROD }}" -auto-approve

  notify:
    runs-on: ubuntu-latest
    needs: [apply_dev, apply_prod]

    steps:
      - name: Notify Success
        if: success()
        run: echo "All checks passed. Ready for approval."